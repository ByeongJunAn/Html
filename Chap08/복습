1. 자바스크립트
    (1) 특징
        a. 인터프리트 언어 : 컴파일 과정을 거치지 않고 바로 실행시킬 수 있는 언어를 말한다. 이는 브라우저가 각 줄을 읽을 때마다 즉시 실행시킨다는 뜻이다.
        b. 동적 타이핑 : 변수의 자료형(자바의 int같은 것들)을 선언하지 않고 var x;
         와 같이 사용할 수 있다.
        c. 객체 기반
        d. 함수형 프로그래밍 지원 : 함수는 그 자체로 객체인데 속성과 .call()같은 메서드를 가진다. 
        e. 프로토 타입-기반 : 자바스크립트는 상속을 위해 클래스 개념 대신에 프로토타입을 사용한다.
    
    (2) 자바 스크립트 사용법 : <script></script> 사이에 기술하면 된다.

2. 자바스크립트의 위치
    (1)css와 마친가지로 
        내부, 외부, 인라인으로 html문서에 삽입 될 수 있다.

    (2) 내부의 경우 html 어디라도 넣을 수 있지만 보통은 <head> 태그 안에 넣는다.

    (3) 외부의 경우 .js라는 확장자를 가진 외부 자바스크립트 파일이 있어야 하는데 이 파일을 사용하기 위해서는 <script>태그의 src 속성의 값으로 파일의 이름을 입력해야 한다. 
        (예시)
        ...
        <html>
        <head>
            <script src="myscript.js"></script>
        </head>
        <body>
        ...

    (4) 인라인 자바 스크립트의 경우에는 HTML태그 내부에 이벤트 속성으로 삽입 될 수는 있으나 꼭 필요한 경우가 아니라면 잘 쓰이진 않는다.
        (예시)
        ...
        <body>
            <button type="button" onclick="alert('반갑습니다.')">버튼을 누르세요!</button>
        <body>
        ...

    (5) (참고) 자바스크립트 소스를 입력하고 바로 출력을 하려면?
        크롬 같은 인터넷 브라우저에서 마우스 오른쪽 클릭 - 검사를 누르면 개발자 옵션을 킬 수 있는데 여기에 있는 Console 창을 키면 콘솔창이 나오는데 
        이곳에서 자바스크립트 소스를 입력하고 엔터키를 누르면 바로 결과를 확인할 수 있다.


3. 문장
    (1) 규칙
        a. 각 문장의 끝에는 ;(세미콜론)을 붙인다. ;은 자바스크립트 문장을 분리시킨다. 
        
        b. 각 문장은 블록(block)이라는 단위로 묶일 수 있다. {로 시작해서 }로 끝난다.
        
        c. 자바스크립트는 대소문자를 구별한다. 한 예시로 init() 함수는 INIT() 함수와 동일하지 않다. 
        주의 사항으로 HTML의 경우엔 대소문자를 구별하지 않는다.  
        자바스크립트에서 HTML태그와 속성 이름은 소문자로 적어주어야 한다.
        즉, onclick 속성은 HTML에서는 onClick 이라고 써도 되지만 자바스크립트에서는 반드시 소문자 onclick으로 써야한다. 
        
        d. 공백 문자는 모두 무시한다. document.write() 같이 붙여써야하는곳에 document.     write()이런식으로 공백을 쓰면 컴파일 오류가 발생한다.  

    (2) 주석문
        자바와 같다.
        단일 문장의 경우 // 를 사용하며 다중 문장은 /*여기에 문장입력*/을 사용한다.


4. 변수
    (1) 자바스크립트에서는 var 키워드를 사용한다.
        (예시)
            var x ; //var: 변수 , x: 변수 이름 지정, ;: 문장이 끝남을 의미
    
    (2) 자료형(int, double, string) 같은 변수가 저장하는 값의 유형을 지정하지 않는다.
        즉, var x= "여기에 숫자가 오든 문자열이 오든 모두 ok다"
        또한 문자열을 나타낼 때는 큰따옴표("..")나 작은 따옴표('..')를 모두 사용할 수 있다. 
    (3) 한 줄에 여러 개의 변수 선언이 가능하다.
        var name = "Hong", age = 24, job = "student"

    (4) 객체형 생성하기
        객체는 사물의 속성과 동작을 표현하는 기법중에 하나이다. 

           사물의 속성: var myCar={model: "bmz", color: "red", hp: 100};
           사물의 동작: document.write(myCar.model + "<br>");
                       document.write(myCar.color + "<br>");
                       document.write(myCar.hp + "<br>");

5. 연산자
    (1) 자바의 일반적인 특징과 별 다르지 않다. 
        자바스크립트에서 약간 특이한 연산자는 === 연산자와 !== 연산자가 있다.
        만약 변수 x는 정수 1을 저장하고 있다고 가정 하자.

        a.  연산자 === : 값과 타입이 모두 같으면 참
            => 자바는 타입까지 지정해주기 때문에 필요 없지만 자바스크립트는 타입을 지정하지 않고 var로 타입에 상관 없이 쓰기 때문에 이를 해결하기 위해 나왔다.
                (예시)
                    x===1 : true(값도 같고 타입도 같다.)
                    x==="1" : false(같은 같으나 타입이 다르다.)

                      
            
        
        b. 연산자 !== : 값이나 타입이 같지 않으면(다르면) 참
                (예시)
                    x!== 1: false(값도 같고 타입도 같다.)
                    x!== "1": true(값은 같으나 타입이 다르다.)

    (2) 연산자 우선순위
        우선순위가 높은 연산자 부터 계산된다.

        1순위 : .[]new
        2순위 : ()
        3순위 : ++ --  <!--증감연산자--> 
        4순위 : ! ~ + - typeof void delete  
        /* 
                ~(Tilt) 연산자: 비트 연산자를 바꿔주는 역할을 한다. 0101 이면 1010으로 바꾼다, 
                          + - : 여기서 + - 는 음수 양수 단위를 나타내며 -를 주로 쓴다.
                       typeof : 피연산자의 평가 전 자료형을 나타내는 문자열을 반환할때 쓴다. 
                            (예시)
                                console.log(typeof 42);
                            // expected output: "number" 
        */
        5순위 : * / %
        6순위 : + - 
        7순위 : << >> <<< >>>
        8순위 : < <= > >= in instanceof
        9순위 : == != === !==
        ...


6. 숫자와 문자열 변환
        (1) 변환 방법
             a. 문자열 -> 숫자 : parseInt() 함수 사용
                    (예시)
                        var input= "10";
                        number = parseInt(input);

             b. 숫자 -> 문자 : string() 함수 사용
                    (예시)
                        var str = 13;
                        str = string(13)   

        (2) prompt() 함수
            사용자에게 어떤 사항을 알려주고 사용자가 답변을 입력할 수 있는 윈도우를 화면에 띄운다. 사용자가 입력한 값은 문자열로 반환된다. 
            ()의 앞의 값은 사용자에게 알려주고 싶은 말을 쓰고 뒤의 값은 입력하는곳에 다시한번 알려준다. 
                (예시)
                    <script>
                    var age = prompt("나이를 입력하세요", "만 나이로 입력합니다")
                    </script>
        
        (3) HTML 요소에 접근하기
            자바스크립트에서 HTML 요소에 접근하기 위해서는 document.getElementByid(id이름) 메서드를 사용한다. 
            HTML 요소를 식별하기 위해서 "id" 속성을 사용한다.
                (예시)
                    ...
                    <body>
                        <h1 id="test"> This is a heading.</h1>
                        <script>
                            function func() {
                                e= document.getElementByid("test");
                                e.style.color = "red";
                            }
                        </script>
                      <button type = "button" onclick="func()">클릭하세요</button>
                    <body>
7. 조건문, switch문, 반복문
    전부 기존의 자바와 같다.

8. 배열
    (1) 리터럴로 배열 생성
           
            var fruits = ["apple", "banana", "peach"];
            와 같이 []를 사용하여 선언하고 ','를 이용하여 구분한다. 

            참고로 객체는 {}이므로 헷갈리지 않게 잘 기억하자

    (2) Array 객체로 배열 생성: 
            Array 객체를 이용하면 비어있는 문장을 생성한다. 
                var fruits = new Array();
            따라서 배열의 값을 생성 해줘야 한다.
                frutis[0] = "Apple";

            이를 줄여서 다음과 같이 생성해줘도 된다.
                var fruits = new Array("Apple", "Banana", "Orange");
            
    (3) 자바스크립트 배열의 특징
           a. 타입을 지정하지 않고 저장 하기 때문에 하나의 배열에 여러 가지 
              종류의 객체를 혼합해서 저장할 수 있다. 
                (예시) var comp = new Array();
                        comp[0] = "apple"
                        comp[1] = new Date();
                        comp[2] = 3.14;
                    
           b. 키를 이용해 값을 저장하고 다시 추출할 수 있다. 여기서 키는 단순한 문자열을 말한다. 즉, [0], [1], [2] 대신에 [a], [b], [c]를 사용할 수 있다는 것이다. 

                (예시) var fruits = new Array();
                       fruits['a'] = '사과';
                       fruits['b'] = '포도';
                       fruits['c'] = '오렌지';
                       document.write(fruits['a'] + "<br>");
                       document.write(fruits['b'] + "<br>");
                       document.write(fruits['c'] + "<br>");



9. 함수 
    (1) 키워드로 function을 사용한다. 
            function 함수이름 () {함수 몸체}

    (2) 인수와 매개 변수
            자바처럼 인수와 매개변수를 사용한다.
                (예시) 
                    function showDialog(para1, para2)
                    {...

                    ...
                    ...
                    ...}
                     
                showDialog(arg1, arg2);

    (3) 무명함수
            자바의 내용과 같다. 
            (예시)
                function showDialog(){
                    alert("안녕하세요?");
                }

                ==>

                var greeting = function(){
                    alert("안녕하세요?");
                }
            greeting();

10. 자바스크립트의 입출력
    (1) alert() 함수  : 경고창
        사용자에게 경고를 하는 윈도우를 화면에 띄우는 함수이다. 
   
    (2) confirm() 함수 : Yes or No
        사용자에게 어떤 사항을 알려주고 확인이나 취소를 요구하는 윈도우를 화면에 띄운다. 사용자가 확인을 클릭하면 true를 반환하고 그렇지 않으면 false를 반환한다. 

    (3) prompt() 함수 
        사용자에게 어떤 사항을 알려주고 사용자가 답변을 입력 할 수 있는 윈도우 화면을 띄운다. 사용자가 입력한 내용을 문자열로 반환한다.

    (4) HTML 문서에 쓰기
        document.write()를 사용한다.
